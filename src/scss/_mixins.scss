@function oShareGetThemeColor($theme) {
	$color: map-get($o-share-themes-palette, 'default');

	@if map-has-key($o-share-themes-palette, $theme) {
		$color: map-get($_o-share-foreground-palette, $theme);
	}

	@return $color;
}

/// @param {String} $foreground - String | Color | map like `$o-share-icon-palette` as defined in `_variables.scss`.
@mixin oShareSetIcons(
	$iconnames: $o-share-icon-names,
	$size: $o-share-icon-size,
	$theme: 'default',
	$classname: 'o-share') {
	
	$tint: oShareGetThemeColor($theme);

	@each $icon in $o-share-icon-names {
		.#{$classname}__#{$icon} i {
			@include socialImagesSetImageFor($icon, $theme: $theme)
			background-image: url("#{$image-service-url}/#{$icon}.svg?width=#{$size}&height=#{$size}&tint=#{$tint}&format=png&source=ftchinese");
			background-image: url("#{$image-service-url}/#{$icon}.svg?width=#{$size}&height=#{$size}&tint=#{$tint}&format=svg&source=ftchinese"), none;
		}
	}
}

@mixin oShareSetBackgroundColor($color) {
	@if type-of($color) == string {
		background-color: oColorsGetPaletteColor($color);
	} @else if type-of($color) == color {
		background-color: $color;
	}
}

/// @param {String} $background - String | Color | map like `$o-share-icon-palette` as defined in `_variables.scss`.
@mixin oShareSetLinkStyle(
	$background: $o-share-icons-palette, 
	$border: null, 
	$radius: 50%, 
	$classname: 'o-share') {

// Set background-color, individually for each icon or collectively for all with the same color.
	@if type-of($background) == map {
		@each $icon, $color in $background {
			.#{$classname}__#{$icon} a {
				@include oShareSetBackgroundColor($color);
			}
		}
	}

	.#{$classname}__action a {
		@if type-of($background) != map {
			@include oShareSetBackgroundColor($background);
		}

		@if $border != null {
			border: $border;
		}

		@if $radius != null {
			border-radius: $radius;
		}
	}
}