/// @param {String} $foreground - String | Color | map like `$o-share-icon-palette` as defined in `_variables.scss`.
@mixin oShareSetIcons($color: 'white', $classname: o-share) {
// set the icon's shape and color
	@if type-of($color) == map {
		@each $icon, $fillcolor in $color {
			.#{$classname}__#{$icon} i {
				// background-image: sassvg($icon, $fillcolor: $color);
				@include socialImagesGetSassvg($icon, $color: $fillcolor, $apply-base-styles: false);
			}
		}
	} @else {

		$fillcolor: if(type-of($color) == string, oColorsGetPaletteColor($color), $color);

		@each $icon in $o-share-icon-names {

			.#{$classname}__#{$icon} i {
				@include socialImagesGetSassvg($icon, $color: $fillcolor, $apply-base-styles: false);
			}
		}			
	}
}

@mixin oShareSetSprite($color: 'white', $classname: o-share) {

	$fillcolor: if(type-of($color) == string, oColorsGetPaletteColor($color), $color);

	.#{$classname}__action {
		svg {
			fill: $fillcolor
		}
	}
}

/// @param {String} $background - String | Color | map like `$o-share-icon-palette` as defined in `_variables.scss`.
@mixin oShareSetLinkStyle($background, $border: null, $classname: o-share) {

	@if type-of($background) == map {
		@each $icon, $color in $background {
			.#{$classname}__#{$icon} a {
				background-color: $color;
				@if $border != null {
					border: $border;
				}
			}
		}
	} @else {
// If $background is a string, it should be one of the o-colors palette key.
		$color: if(type-of($background) == string, oColorsGetPaletteColor($background), $background);

		.#{$classname}__action a {
			background-color: $color;
			@if $border != null {
				border: $border;
			}
		}
	}
}

// Set foreground and background color on <a> tag.
@mixin oShareSetLinkHover($background, $classname: o-share) {

	@if type-of($background) == map {

		@each $icon, $color in $background {
			.#{$classname}__#{$icon} a:hover {
				background-color: $color;
			}
		}

	} @else {

		$color: if(type-of($background) == string, oColorsGetPaletteColor($background), $hover);

		.#{$classname}__action a:hover {
			background-color: $color;
		}
	}
}