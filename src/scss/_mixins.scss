@function oShareGetIconColor($theme) {
		$color: 'white';

		@if map-has-key($_o-share-foreground-palette, $theme) {
			$color: map-get($_o-share-foreground-palette, $theme);
		}

		@return if(type-of($color) == 'color', $color, oColorsGetPaletteColor($color));
}

/// @param {String} $foreground - String | Color | map like `$o-share-icon-palette` as defined in `_variables.scss`.
@mixin oShareSetIcons($iconnames: $_o-share-icon-names, $theme: 'default', $classname: 'o-share') {
	
	@if $o-share-use-sprite == false {
		@each $icon in $_o-share-icon-names {
			.#{$classname}__#{$icon} i {
				@include socialImagesSetImageFor($icon, $theme: $theme)
			}
		}		
	} @else {

		.#{$classname}__action svg {
			fill: oShareGetIconColor($theme);
		}
	}
}


/// @param {String} $background - String | Color | map like `$o-share-icon-palette` as defined in `_variables.scss`.
@mixin oShareSetLinkStyle(
	$background: $_o-share-background-palette, 
	$border: null, 
	$radius: 50%, 
	$classname: 'o-share') {

// Set background-color, individually for each icon or collectively for all with the same color.
	@if type-of($background) == map {
		@each $icon, $color in $background {
			.#{$classname}__#{$icon} a {
				@include oShareSetBackgroundColor($color);
			}
		}
	}

	.#{$classname}__action a {
		@if type-of($background) != map {
			@include oShareSetBackgroundColor($background);
		}

		@if $border != null {
			border: $border;
		}

		@if $radius != null {
			border-radius: $radius;
		}
	}
}


// Set foreground and background color on <a> tag.
@mixin oShareSetLinkHover($background: null, $opacity: 0.8, $classname: 'o-share') {

	@if type-of($background) == map {

		@each $icon, $color in $background {
			.#{$classname}__#{$icon} a:hover {
				background-color: $color;
			}
		}
	}

	.#{$classname}__action a:hover {
		@if $background != null {
			@include oShareSetBackgroundColor($background);
		}

		@if $opacity != null {
			opacity: $opacity;
		}
	}
}

@mixin oShareSetBackgroundColor($color) {
	@if type-of($color) == string {
		background-color: oColorsGetPaletteColor($color);
	} @else if type-of($color) == color {
		background-color: $color;
	}
}